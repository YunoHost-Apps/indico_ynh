#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

secret_key=$(ynh_string_random --length=32)
ynh_app_setting_set --key=secret_key --value=$secret_key

admin_mail=$(ynh_user_get_info --username=$admin --key=mail)
ynh_app_setting_set --key=admin_mail --value=$admin_mail

timezone="$(cat /etc/timezone)"
ynh_app_setting_set --key=timezone --value=$timezone

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

#ynh_setup_source --dest_dir="$install_dir"

chown -R "$app:www-data" "$install_dir"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template="../conf/uwsgi-indico.ini" --destination="$install_dir/uwsgi-indico.ini"
ynh_config_add --template="../conf/indico.conf" --destination="$install_dir/indico.conf"
ynh_config_add --template="../conf/.env" --destination="$install_dir/.env"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

pushd $install_dir
    python3 -m venv $install_dir/venv
    ynh_hide_warnings $install_dir/venv/bin/pip install --upgrade pip setuptools wheel uwsgi
    ynh_hide_warnings $install_dir/venv/bin/pip install indico
    ynh_hide_warnings $install_dir/venv/bin/python3 -m indico db prepare
popd

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config

ynh_add_systemd_config --service="$app-celery" --template="$app-celery.service"
ynh_add_systemd_config --service="$app-uwsgi" --template="$app-uwsgi.service"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

# Create a dedicated Fail2Ban config
# ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app-celery" --action="start"  --description="Celery for indico" --log="/var/log/$app/$app-celery"
ynh_systemctl --service="$app-uwsgi" --action="start"  --description="uwsgi for indico" --log="/var/log/$app/$app-uwsgi"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
